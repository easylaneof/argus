services:
  scrapper:
    container_name: scrapper_container
    build:
      dockerfile: scrapper.Dockerfile
      context: .
    depends_on:
      - liquibase-migrations
      - rabbitmq
    environment:
      APP_POSTGRES_JDBC_URL: jdbc:postgresql://postgresql:5432/scrapper
      APP_RABBITMQ_HOST: rabbitmq
      APP_BOT_API_URL: bot:8081
    networks:
      - backend
    ports:
      - 8080:8080
      - 9080:9080

  bot:
    container_name: bot_container
    build:
      dockerfile: bot.Dockerfile
      context: .
    depends_on:
      - scrapper
      - rabbitmq
    environment:
      APP_RABBITMQ_HOST: rabbitmq
      APP_SCRAPPER_API_URL: scrapper:8080
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 8081:8081

  postgresql:
    container_name: postgres_container
    image: postgres:15.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scrapper
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - backend
    ports:
      - 5432:5432

  liquibase-migrations:
    container_name: liquibase_container
    image: liquibase/liquibase:4.18
    depends_on:
      - postgresql
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./scrapper/migrations:/liquibase/changelog
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3-management
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - backend

  grafana:
    image: grafana/grafana-oss
    container_name: grafana_container
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - backend
    ports:
      - 3000:3000

volumes:
  prometheus:
  grafana:
  postgres:
  rabbitmq:

networks:
  backend:
